;[uwsgi]
;# 项目目录
;chdir=/Users/X/PycharmProjects/BlogProject/
;# 指定项目的application
;module=BlogProject.wsgi:application
;# 进程个数
;workers=5
;pidfile=/Users/X/PycharmProjects/BlogProject/script/uwsgi.pid
;# 指定IP端口
;http=127.0.0.1:8080
;home=/Users/X/PycharmProjects/BlogProject/venv
;wsgi-file=/Users/X/PycharmProjects/BlogProject/BlogProject/wsgi.py
;# 指定静态文件
;static-map=/static=/Users/X/PycharmProjects/BlogProject/blog/static
;# 启动uwsgi的用户名和用户组
;uid=root
;gid=root
;# 启用主进程
;master=true
;# 自动移除unix Socket和pid文件当服务停止的时候
;vacuum=true
;# 序列化接受的内容，如果可能的话
;thunder-lock=true
;# 启用线程
;enable-threads=true
;# 设置自中断时间
;harakiri=30
;# 设置缓冲
;post-buffering=4096
;# 设置日志目录
;daemonize=/Users/X/PycharmProjects/BlogProject/script/uwsgi.log
;# 指定sock的文件路径
;socket=/Users/X/PycharmProjects/BlogProject/script/uwsgi.sock


[uwsgi]

# Django-related settings
# the base directory (full path)
chdir           = /Users/X/PycharmProjects/BlogProject/
# Django's wsgi file
module          = BlogProject.wsgi
# the virtualenv (full path)
home            = /Users/X/PycharmProjects/BlogProject/venv
# the socket (use the full path to be safe
socket            = /tmp/BlogProject.sock
# process-related settings
# master
master          = true
# maximum number of worker processes
processes       = 10
# ... with appropriate permissions - may be needed
chmod-socket    = 664
# clear environment on exit
vacuum          = true
# create a pidfile
pidfile = /tmp/BlogProject.pid
daemonize = uwsgi.log